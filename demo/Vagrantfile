# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  # config.vm.box = "ubuntu/jammy64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  #config.vm.network "forwarded_port", guest: 8080, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:


Vagrant.configure("2") do |config|
  # customization
  # https://stackoverflow.com/questions/17845637/how-to-change-vagrant-default-machine-name
  config.vm.box = "ubuntu/jammy64"

  config.vm.define     "jenkins-demo"
  config.vm.hostname = "jenkins-demo"
  config.vm.network    "forwarded_port", guest: 8080, host: 8080

  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = false
    vb.customize ['modifyvm', :id, '--graphicscontroller', 'vmsvga']

    vb.memory = "8192"
    vb.cpus = 4
  end

  #config.vm.provision "shell", inline: <<-SHELL
  config.vm.provision "shell", inline: $prepare_vm

  config.vm.provision "shell", path: "enable-root-user-at-ubuntu.sh"
  config.vm.provision "shell", path: "install-ubuntu-packages.sh"
  config.vm.provision "shell", path: "install-docker.sh"
  config.vm.provision "shell", path: "install-tcping.sh"

  config.vm.provision "shell", inline: $install_jenkins
end

$prepare_vm = <<-SHELL
sed -i -e 's/archive.ubuntu.com/mirror.kakao.com/g' /etc/apt/sources.list
apt update
apt install -y --no-install-recommends default-jdk
SHELL


$install_jenkins = <<-SHELL
wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key |sudo gpg --dearmor -o /usr/share/keyrings/jenkins.gpg
sudo sh -c 'echo deb [signed-by=/usr/share/keyrings/jenkins.gpg] http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
sudo apt update
sudo apt install -y --no-install-recommends jenkins
SHELL

